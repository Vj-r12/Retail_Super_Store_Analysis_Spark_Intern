/*****     DATA ANALYSIS     *****/


/*****  RETAIL SUPERSTORE ANALYSIS  *****/


-- Fetch the sample superstore information.

SELECT *
FROM SAMPLE_SUPERSTORE_INFO;

-- Fetch the top 3 sub-category by quantity sold. 

SELECT SUB_CATEGORY,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY SUB_CATEGORY
ORDER BY TOTAL_QUANTITY_SOLD DESC
LIMIT 3;

-- Fetch the top 3 state by quantity sold.

SELECT STATE,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY STATE
ORDER BY TOTAL_QUANTITY_SOLD DESC
LIMIT 3;

-- Fetch the highest profit by segments.

SELECT SEGMENT,
	SUM(PROFIT) AS TOTAL_PROFIT
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY SEGMENT
ORDER BY TOTAL_PROFIT DESC;

-- Fetch the top 3 city by quantity sold.

SELECT CITY,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY CITY
ORDER BY TOTAL_QUANTITY_SOLD DESC
LIMIT 3;

-- Fetch the segments and rank the segments by highest members.

SELECT X.SEGMENT,TOTAL_SEGMENT,
	RANK() OVER (ORDER BY TOTAL_SEGMENT DESC) AS RANK_BY_SEGMENT
FROM
	(
		SELECT SEGMENT,
			COUNT(SEGMENT) AS TOTAL_SEGMENT
		FROM SAMPLE_SUPERSTORE_INFO
		GROUP BY SEGMENT
	) X;
	
-- Find the highest category by quantity sold.
	
SELECT CATEGORY,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY CATEGORY
ORDER BY TOTAL_QUANTITY_SOLD DESC;

-- Find the highest shiping mode by orders delivered.
	
SELECT SHIP_MODE,
	COUNT(SHIP_MODE) AS TOTAL_SHIP_MODE
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY SHIP_MODE
ORDER BY TOTAL_SHIP_MODE DESC;

-- Fetch the bottom 3 city by quantity sold.

SELECT CITY,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY CITY
ORDER BY TOTAL_QUANTITY_SOLD 
LIMIT 3;

-- Fetch the bottom 3 state by quantity sold.

SELECT STATE,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY STATE
ORDER BY TOTAL_QUANTITY_SOLD 
LIMIT 3;

-- Fetch the bottom 3 sub-category by quantity sold. 

SELECT SUB_CATEGORY,
	SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD
FROM SAMPLE_SUPERSTORE_INFO
GROUP BY SUB_CATEGORY
ORDER BY TOTAL_QUANTITY_SOLD
LIMIT 3;